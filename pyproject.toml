[tool.poetry]
name = "time-it-right"
version = "0.1.0"
description = "Timer-based game with FastAPI - Users try to stop timer at exactly 10 seconds"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
aiosqlite = "^0.19.0"
python-dotenv = "^1.0.0"
requests = "^2.31.0"
websockets = "^12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.25.2"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
flake8-pyproject = "^1.2.3"
mypy = "^1.7.1"
coverage = "^7.3.2"

[tool.poetry.scripts]
start = "app.main:start"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".tox",
    "build",
    "dist",
    "*.egg-info",
    "**/__init__.py"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

ignore_missing_imports = true
disable_error_code = [
    "call-overload",  # Pydantic Field syntax
    "assignment",     # SQLAlchemy Column assignments (temporalmente)
    "arg-type",       # SQLAlchemy Column vs value (temporalmente)
]

exclude = [
    "__pycache__",
    "build",
    "dist",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-v",
    "--disable-warnings",
    "--tb=short",
    "--strict-markers",
]
testpaths = ["tests"]
asyncio_mode = "strict"
markers = [
    "asyncio: marks tests as async",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
